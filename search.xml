<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Sort_Analysis</title>
      <link href="/2020/03/02/Sort_Analysis/"/>
      <url>/2020/03/02/Sort_Analysis/</url>
      
        <content type="html"><![CDATA[<p>date: 2020-02-20 13:37:44</p><h2 id="Analysis-of-Sorting-Methods"><a href="#Analysis-of-Sorting-Methods" class="headerlink" title="Analysis of Sorting Methods"></a>Analysis of Sorting Methods</h2><h3 id="Insertion-Sort"><a href="#Insertion-Sort" class="headerlink" title="Insertion Sort"></a>Insertion Sort</h3><p>​    <strong>It is very fast in ascending sequence, the time complexity is O(n). But in Descending sequence, the time complexity is O($n^2$).</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">insertionSort</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span>[] list)</span> </span>&#123;</span><br><span class="line">       <span class="comment">// TODO :add your code here</span></span><br><span class="line">       <span class="comment">// reference: http://math.hws.edu/eck/cs124/javanotes8/c7/s4.html 7.4.3</span></span><br><span class="line">       <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++) &#123;</span><br><span class="line">           <span class="keyword">int</span> temp = list[i];</span><br><span class="line">           <span class="keyword">int</span> j = i;</span><br><span class="line">           <span class="keyword">while</span> (j &gt; <span class="number">0</span> &amp;&amp; list[j - <span class="number">1</span>] &gt; temp) &#123;</span><br><span class="line">               list[j] = list[--j];</span><br><span class="line">           &#125;</span><br><span class="line">           list[j] = temp;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h3 id="Bubble-Sort"><a href="#Bubble-Sort" class="headerlink" title="Bubble Sort"></a>Bubble Sort</h3><p>​    <strong>If we tick that the last sorting not change any two data, then the list is sorted. In this case, the time complexity of ascending sequence is O(n).</strong></p><p>​    <strong>else, the time complexity is O($n^2$).</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">bubbleSort</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span>[] list)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; i++) &#123;</span><br><span class="line">           <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n - i - <span class="number">1</span>; j++) &#123;</span><br><span class="line">               <span class="keyword">if</span> (list[j] &gt; list[j + <span class="number">1</span>]) &#123;</span><br><span class="line">                   <span class="comment">// swap</span></span><br><span class="line">                   <span class="keyword">int</span> tmp = list[j + <span class="number">1</span>];</span><br><span class="line">                   list[j + <span class="number">1</span>] = list[j];</span><br><span class="line">                   list[j] = tmp;</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h3 id="Selection-Sort"><a href="#Selection-Sort" class="headerlink" title="Selection Sort"></a>Selection Sort</h3><p>​    <strong>The time complexity is O($n^2$).</strong> </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">selectionSort</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span>[] list)</span> </span>&#123;</span><br><span class="line">       <span class="comment">// TODO :add your code here</span></span><br><span class="line">       <span class="comment">// reference: http://math.hws.edu/eck/cs124/javanotes8/c7/s4.html 7.4.4</span></span><br><span class="line">       <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">           <span class="keyword">int</span> min = list[i];</span><br><span class="line">           <span class="keyword">int</span> minpoint = i;</span><br><span class="line">           <span class="keyword">for</span> (<span class="keyword">int</span> j = i; j &lt; n; j++) &#123;</span><br><span class="line">               <span class="keyword">if</span> (min &gt; list[j]) &#123;</span><br><span class="line">                   min = list[j];</span><br><span class="line">                   minpoint = j;</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">           list[minpoint] = list[i];</span><br><span class="line">           list[i] = min;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h3 id="Quick-Sort"><a href="#Quick-Sort" class="headerlink" title="Quick Sort"></a>Quick Sort</h3><p>​    <strong>The best and average time complexity is O($nlogn$).</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">quickSort</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span>[] list)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// TODO :add your code here</span></span><br><span class="line">        <span class="comment">// Adam's ppt</span></span><br><span class="line">        <span class="keyword">if</span> (l &lt; r) &#123;</span><br><span class="line">            <span class="keyword">int</span> mid = (l + r) / <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">int</span> temp = list[mid];</span><br><span class="line">            list[mid] = list[l];</span><br><span class="line">            <span class="keyword">int</span> i = l;</span><br><span class="line">            <span class="keyword">int</span> j = r;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span> (i &lt; j) &#123;</span><br><span class="line">                <span class="keyword">while</span> (i &lt; j &amp;&amp; list[j] &gt;= temp) &#123;</span><br><span class="line">                    j--;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (i &lt; j) &#123;</span><br><span class="line">                    list[i++] = list[j];</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">while</span> (i &lt; j &amp;&amp; list[i] &lt; temp)</span><br><span class="line">                    i++;</span><br><span class="line">                <span class="keyword">if</span> (i &lt; j) &#123;</span><br><span class="line">                    list[j--] = list[i];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            list[i] = temp;</span><br><span class="line">            quickSort(l, i - <span class="number">1</span>, list);</span><br><span class="line">            quickSort(i + <span class="number">1</span>, r, list);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="Merge-Sort"><a href="#Merge-Sort" class="headerlink" title="Merge Sort"></a>Merge Sort</h3><p>​    <strong>The time complexity is O($nlogn$)</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">mergeSort</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span>[] list)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// TODO :add your code here</span></span><br><span class="line">        <span class="comment">// https://introcs.cs.princeton.edu/java/42sort/ Mergesort</span></span><br><span class="line">        <span class="keyword">int</span>[] result = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">        div(<span class="number">0</span>, n - <span class="number">1</span>, result, list);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">div</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span>[] res, <span class="keyword">int</span>[] list)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (l &lt; r) &#123;</span><br><span class="line">            <span class="keyword">int</span> mid = (l + r) / <span class="number">2</span>;</span><br><span class="line">            div(l, mid, res, list);</span><br><span class="line">            div(mid + <span class="number">1</span>, r, res, list);</span><br><span class="line">            merge(l, mid, r, res, list);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">merge</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> mid, <span class="keyword">int</span> r, <span class="keyword">int</span>[] res, <span class="keyword">int</span>[] list)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i = l;</span><br><span class="line">        <span class="keyword">int</span> j = mid + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> k = l;</span><br><span class="line">        <span class="keyword">while</span> (i &lt;= mid &amp;&amp; j &lt;= r) &#123;</span><br><span class="line">            <span class="keyword">if</span> (list[i] &lt; list[j])</span><br><span class="line">                res[k++] = list[i++];</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                res[k++] = list[j++];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> (i &lt;= mid)</span><br><span class="line">            res[k++] = list[i++];</span><br><span class="line">        <span class="keyword">while</span> (j &lt;= r)</span><br><span class="line">            res[k++] = list[j++];</span><br><span class="line">        <span class="keyword">while</span> (l &lt;= r) &#123;</span><br><span class="line">            list[l] = res[l];</span><br><span class="line">            l++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="Heap-Sort"><a href="#Heap-Sort" class="headerlink" title="Heap Sort"></a>Heap Sort</h3><p>​    <strong>The time complexity is O($nlogn$)</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">heapSort</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span>[] list)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// TODO :add your code here</span></span><br><span class="line">        <span class="comment">// optional</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = (n - <span class="number">1</span>) / <span class="number">2</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">            make_min_heap(i, n, list);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = n; i &gt; <span class="number">0</span>; i--) &#123;</span><br><span class="line">            swap(<span class="number">0</span>, i, list);</span><br><span class="line">            make_min_heap(<span class="number">0</span>, i, list);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">make_min_heap</span><span class="params">(<span class="keyword">int</span> root, <span class="keyword">int</span> n, <span class="keyword">int</span>[] list)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> j = <span class="number">2</span> * root + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (j &lt; n) &#123;</span><br><span class="line">            <span class="keyword">if</span> (j + <span class="number">1</span> &lt; n &amp;&amp; list[j + <span class="number">1</span>] &lt; list[j]) &#123;</span><br><span class="line">                j++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (list[root] &lt; list[j]) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            swap(root, j, list);</span><br><span class="line">            root = j;</span><br><span class="line">            j = <span class="number">2</span> * j + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">swap</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> j, <span class="keyword">int</span>[] list)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> temp = list[i];</span><br><span class="line">        list[i] = list[j];</span><br><span class="line">        list[j] = temp;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Java 学习记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客搭建记录</title>
      <link href="/2020/02/21/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
      <url>/2020/02/21/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<center><h2>博客搭建记录</h2></center>[参考视频](https://www.bilibili.com/video/av44544186)<ul><li><p><a href="nodejs.org">安装Nodejs</a></p></li><li><p>利用淘宝镜像安装cnpm</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cnpm --registry&#x3D;https:&#x2F;&#x2F;registry.npm.taobao.org</span><br></pre></td></tr></table></figure></li><li><p>利用cnpm安装hexo</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install -g hexo-cli</span><br></pre></td></tr></table></figure></li><li><p>创建博客文件夹</p></li><li><p>在博客文件夹根目录初始化hexo</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure></li><li><p>开启博客</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure></li><li><p>更改主题</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone github.com&#x2F;.......git themes&#x2F;name</span><br></pre></td></tr></table></figure></li><li><p>修改配置文件  </p><ul><li>language: ch-Hans</li><li>更改 themes: next</li><li>添加tag        hexo n page tags</li></ul></li><li><p>将博客部署到github</p><ul><li><p>创建库 库名必须为 name.github.io</p></li><li><p>在hexo根目录下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install --save hexo-deployer-git</span><br></pre></td></tr></table></figure></li><li><p>进入配置文件更改</p><ul><li>deployer: git</li><li>repo: gitclone地址</li><li>branch: mster</li></ul></li><li><p>部署到网页</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure></li></ul></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 博客搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IO 流和 Charset</title>
      <link href="/2020/02/21/IO%20%E6%B5%81%E5%92%8C%20Charset/"/>
      <url>/2020/02/21/IO%20%E6%B5%81%E5%92%8C%20Charset/</url>
      
        <content type="html"><![CDATA[<p>date: 2020-02-20 13:37:44</p><center><h1>IO 流和 Charset</h1></center>## IO Steam<p><img src="/images/Java%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/image-20200220211204031.png" alt="image-20200220211204031"></p><center><h4>Sample.txt</h4></center>刹车时代<center><h4>String,StringBuffer,StringBuilder</h4></center><p><a href="https://blog.csdn.net/qq_37856300/article/details/84340288" target="_blank" rel="noopener">参考博客</a>    </p><p>String += 新创建一个对象储存结果并删除原本对象</p><p>​    StringBuffer和StringBuilder .append（） 直接改变本身的值速度快，</p><p>​    若是String str=a+b 则非常快速 这是因为String和我们其它类型的变量不同，其它的非基本类型对象的值、数据都存储在java的堆中，而String类型的变量的值是存储jvm在方法区中的字符串常量池中的。当我们执行：String str = “a”+“b”;这句话的时候，String会自动把这个对象的值看成”ab”，然后在方法区中如果找到了值同样为”ab”的，就会直接让str句柄指向它，也就是说，我们的这句代码现在相当于：</p><center><h4>FileInputStream 以 Byte 形式读取文件</h4></center><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ByteReader</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> (FileInputStream fis = <span class="keyword">new</span> FileInputStream(</span><br><span class="line">                <span class="string">"C:\\Users\\Peng\\Desktop\\Study\\Java2\\Lab1_SampleCode\\sample.txt"</span>)) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">byte</span>[] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">65535</span>];</span><br><span class="line"></span><br><span class="line">            <span class="keyword">int</span> byteNum = fis.read(buffer);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; byteNum; i++) &#123;</span><br><span class="line">                System.out.printf(<span class="string">"%02x "</span>, buffer[i]);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">            System.out.println(<span class="string">"The pathname does not exist."</span>);</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            System.out.println(<span class="string">"Failed or interrupted when doing the I/O operations"</span>);</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">////////////////////</span></span><br><span class="line">c9 b2 b3 b5 ca b1 b4 fa</span><br></pre></td></tr></table></figure><center><h4>InputStreamReader 将读取的 Byte 转化为Character</h4></center><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StreamReader</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> (InputStreamReader isr = <span class="keyword">new</span> InputStreamReader(</span><br><span class="line">                <span class="keyword">new</span> FileInputStream(<span class="string">"C:\\Users\\Peng\\Desktop\\Study\\Java2\\Lab1_SampleCode\\sample.txt"</span>),</span><br><span class="line">                <span class="string">"gb18030"</span>)) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">char</span>[] cbuf = <span class="keyword">new</span> <span class="keyword">char</span>[<span class="number">65535</span>];</span><br><span class="line">            <span class="keyword">int</span> file_len = isr.read(cbuf);</span><br><span class="line"></span><br><span class="line">            System.out.println(file_len);</span><br><span class="line">            System.out.println(cbuf);</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">            System.out.println(<span class="string">"The pathname does not exist."</span>);</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (UnsupportedEncodingException e) &#123;</span><br><span class="line">            System.out.println(<span class="string">"The Character Encoding is not supported."</span>);</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            System.out.println(<span class="string">"Failed or interrupted when doing the I/O operations"</span>);</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/////////////////</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line">刹车时代</span><br></pre></td></tr></table></figure><center><h4>BufferedReader 提供通用的缓存方式文本读取</h4></center><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BufferReader</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="keyword">try</span> (FileInputStream fis = <span class="keyword">new</span> FileInputStream(<span class="keyword">new</span> File(</span><br><span class="line"><span class="string">"C:\\Users\\Peng\\Desktop\\Study\\Java2\\Lab1_SampleCode\\sample.txt"</span>));</span><br><span class="line"> InputStreamReader isr = <span class="keyword">new</span> InputStreamReader(fis, <span class="string">"gb18030"</span>);</span><br><span class="line"> BufferedReader bReader = <span class="keyword">new</span> BufferedReader(isr);)&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span>[] cbuf = <span class="keyword">new</span> <span class="keyword">char</span>[<span class="number">65535</span>];</span><br><span class="line"><span class="keyword">int</span> file_len = bReader.read(cbuf);</span><br><span class="line"></span><br><span class="line">System.out.println(file_len);</span><br><span class="line">System.out.println(cbuf);</span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">System.out.println(<span class="string">"The pathname does not exist."</span>);</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; <span class="keyword">catch</span> (UnsupportedEncodingException e) &#123;</span><br><span class="line">System.out.println(<span class="string">"The Character Encoding is not supported."</span>);</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">System.out.println(<span class="string">"Failed or interrupted when doing the I/O operations"</span>);</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/////////////</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line">刹车时代</span><br></pre></td></tr></table></figure><center><h4>FileOutStream</h4></center><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ByteWriter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="keyword">try</span> (FileOutputStream fos = <span class="keyword">new</span> FileOutputStream(</span><br><span class="line"><span class="string">"C:\\Users\\Peng\\Desktop\\Study\\Java2\\Lab1_SampleCode\\output.txt"</span>))&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">byte</span>[] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">65535</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; buffer.length; i++)&#123;</span><br><span class="line">buffer[i] = (<span class="keyword">byte</span>) i;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">fos.write(buffer);</span><br><span class="line">fos.flush();<span class="comment">//fos.close();</span></span><br><span class="line">&#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">System.out.println(<span class="string">"The pathname does not exist."</span>);</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">System.out.println(<span class="string">"Failed or interrupted when doing the I/O operations"</span>);</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/////////////</span></span><br><span class="line">以<span class="keyword">byte</span>形式输出文件</span><br></pre></td></tr></table></figure><center><h4>OutputStreamWriter</h4></center><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StreamWriter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">//try (OutputStreamWriter osw = new OutputStreamWriter(new FileOutputStream("output1_gb18030.txt"), "gb18030")) &#123;</span></span><br><span class="line"><span class="keyword">try</span> (OutputStreamWriter osw = <span class="keyword">new</span> OutputStreamWriter(<span class="keyword">new</span> FileOutputStream(<span class="string">"C:\\Users\\Peng\\Desktop\\Study\\Java2\\Lab1_SampleCode\\output1_utf8.txt"</span>), <span class="string">"utf8"</span>)) &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">osw.write(<span class="string">"你好！"</span>);</span><br><span class="line">osw.flush();<span class="comment">//osw.close();</span></span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">System.out.println(<span class="string">"The pathname does not exist."</span>);</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; <span class="keyword">catch</span> (UnsupportedEncodingException e) &#123;</span><br><span class="line">System.out.println(<span class="string">"The Character Encoding is not supported."</span>);</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">System.out.println(<span class="string">"Failed or interrupted when doing the I/O operations"</span>);</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">///////////////</span></span><br><span class="line">你好！</span><br></pre></td></tr></table></figure><center><h4>BufferedWriter</h4></center><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BufferWriter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="keyword">try</span> (FileOutputStream fos = <span class="keyword">new</span> FileOutputStream(<span class="keyword">new</span> File(<span class="string">"Lab1_SampleCode/output2_gb18030.txt"</span>));</span><br><span class="line">OutputStreamWriter osw = <span class="keyword">new</span> OutputStreamWriter(fos, <span class="string">"gb18030"</span>);</span><br><span class="line">BufferedWriter bWriter = <span class="keyword">new</span> BufferedWriter(osw);)&#123;</span><br><span class="line">bWriter.write(<span class="string">"你好！\n"</span>);</span><br><span class="line"><span class="comment">//bWriter.write(100);</span></span><br><span class="line">bWriter.write(<span class="string">"100"</span>);</span><br><span class="line">bWriter.write(<span class="string">" 分 \n"</span>);</span><br><span class="line">bWriter.write(<span class="string">"送给你！\n"</span>);</span><br><span class="line">bWriter.flush();<span class="comment">//bWriter.close();</span></span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">System.out.println(<span class="string">"The pathname does not exist."</span>);</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; <span class="keyword">catch</span> (UnsupportedEncodingException e) &#123;</span><br><span class="line">System.out.println(<span class="string">"The Character Encoding is not supported."</span>);</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">System.out.println(<span class="string">"Failed or interrupted when doing the I/O operations"</span>);</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><center><h4>Char vs. binary value</h4></center><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CharSample</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// UTF-16:赵-8d75 耀-8000, GB:赵-D5D4 耀-D2AB</span></span><br><span class="line"><span class="keyword">char</span> c = <span class="string">'赵'</span>;</span><br><span class="line"><span class="keyword">int</span> value = c;</span><br><span class="line">System.out.printf(<span class="string">"%s\n"</span>, c);</span><br><span class="line">System.out.printf(<span class="string">"%X\n"</span>, value);</span><br><span class="line"></span><br><span class="line">String str = <span class="string">"赵耀"</span>; <span class="comment">// UTF-16</span></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">byte</span>[] bytes1 = str.getBytes(<span class="string">"GBK"</span>); <span class="comment">// or GBK</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">byte</span> b : bytes1) &#123;</span><br><span class="line">System.out.printf(<span class="string">"%2X "</span>, b);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println();</span><br><span class="line"><span class="keyword">byte</span>[] bytes2 = str.getBytes(<span class="string">"UTF-16"</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">byte</span> b : bytes2) &#123;</span><br><span class="line">System.out.printf(<span class="string">"%02X "</span>, b);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println();</span><br><span class="line"></span><br><span class="line"><span class="keyword">byte</span>[] bytes3 = str.getBytes(<span class="string">"UTF-16BE"</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">byte</span> b : bytes3) &#123;</span><br><span class="line">System.out.printf(<span class="string">"%02X "</span>, b);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println();</span><br><span class="line"></span><br><span class="line"><span class="keyword">byte</span>[] bytes4 = str.getBytes(<span class="string">"UTF-16LE"</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">byte</span> b : bytes4) &#123;</span><br><span class="line">System.out.printf(<span class="string">"%02X "</span>, b);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println();</span><br><span class="line">&#125; <span class="keyword">catch</span> (UnsupportedEncodingException e) &#123;</span><br><span class="line">System.out.println(<span class="string">"The Character Encoding is not supported."</span>);</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//////////////////////</span></span><br><span class="line">赵</span><br><span class="line"><span class="number">8</span>D75</span><br><span class="line">D5 D4 D2 AB </span><br><span class="line">FE FF <span class="number">8</span>D <span class="number">75</span> <span class="number">80</span> <span class="number">00</span> </span><br><span class="line"><span class="number">8</span>D <span class="number">75</span> <span class="number">80</span> <span class="number">00</span> </span><br><span class="line"><span class="number">75</span> <span class="number">8</span>D <span class="number">00</span> <span class="number">80</span></span><br></pre></td></tr></table></figure><center><h2>Charset</h2></center>[参考链接](https://blog.csdn.net/tanmx219/article/details/86356270)<ul><li>首先将0x20一下的字节状态成为“控制码”</li><li>然后将字母、数字、符号、空格加入，编到127</li><li>在ASCII码127后增加其他国家字符 128-255 为扩展字符集</li><li>中国将两个大于127的字符连在一起表示中文</li><li>高字节（0xA1-0xF7） 低字节（0xA1-0xFE）</li><li>并且将数字、标点、字母全部重新编码 —-全角符号</li><li>这种汉字方案叫做“GB2312”</li><li>更改低字节 演变为GDK</li><li>GDK再演变为GB18030</li><li>统称DBCS(Double Byte Character set)</li><li>一个汉字等于两个英文字符</li><li>ISO 创建 UCS “UNICODE”</li><li>使得一个汉字一个字符</li><li>字符：符号 字节：8位</li><li>不同PC机不同架构</li><li>高位在位：”FEFF” 低位在位：”FFFE”</li></ul><h4 id="UTF-8"><a href="#UTF-8" class="headerlink" title="UTF-8 "></a><span id="jump">UTF-8 </span></h4><p>​    编码规则：</p><p>​                1）对于单字节的符号，字节的第一位设为0，后面7位为这个符号的unicode码。因此对于英语字母，UTF-8编码和ASCII码是相同的。</p><p>​                2）对于n字节的符号（n&gt;1），第一个字节的前n位都设为1，第n+1位设为0，后面字节的前两位一律设为10。剩下的没有提及的二进制位，全部为这个符号的unicode码。</p><center><h4>surrogate paris 增补字符</h4></center>[参考链接](https://blog.csdn.net/tanmx219/article/details/86356270)<p>Surrogate Pairs 主要是针对增补字符，此时一个16位的编码（2个Byte的UTF-16）已经无法表示，所以就扩展成需要两个16位的编码单元。也就是说，在范围U+10000到U+10FFFF间的编码则使用一对16位编码单元表示，称作代理对(surrogate pair)。</p><p>在BMP内的字符，仍然按照UTF-16的编码规则，使用两个字符来表示。 （注：BMP内的字符编码，不包含从U+D800到U+DFFF的预留码位。这些预留码位就恰好用于扩展字符编码）</p><p>增补字符的编码值已经超过了BMP的编码范围，需要使用一对UTF-16字符来表示一个字符。把Unicode编码记作U。编码规则如下：</p><ul><li><p>如果U&lt;0x10000，U的UTF-16编码就是U对应的16位无符号整数。</p></li><li><p>如果U≥0x10000，</p><p>先计算U’=U-0x10000，</p><p>然后将U’写成二进制形式：yyyy yyyy yyxx xxxx xxxx，（注意这里共计20位）</p><p>U的UTF-16编码（二进制）就是：110110yyyyyyyyyy 110111xxxxxxxxxx。</p></li></ul><p>这两个字符就称为surrogate pair（代理对）。第一个代理字符为16位编码，范围为U+D800到U+DBFF，第二个代理字符也是一个16位编码，范围为U+DC00 to U+DFFF。</p><p><img src="/images/Java%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/image-20200220222344910.png" alt="image-20200220222344910"></p><p>​        <a href="#jump">理由为UTF-8编码规则</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SurrogatePairsTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">String s=String.valueOf(Character.toChars(<span class="number">0x10437</span>));  </span><br><span class="line">System.out.println(s); </span><br><span class="line">System.out.println(s.charAt(<span class="number">0</span>)); </span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span>[]chars=s.toCharArray(); </span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">char</span> c:chars)&#123;  </span><br><span class="line">    System.out.format(<span class="string">"%x"</span>,(<span class="keyword">short</span>)c);  </span><br><span class="line">&#125;  </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">////////////</span></span><br><span class="line">𐐷</span><br><span class="line">?</span><br><span class="line">d801dc37</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Java 学习记录 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
